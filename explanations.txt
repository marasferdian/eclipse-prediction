-----Explanation of algorithms-----

--Var 1.-- Distance between sun and moon

-For each date between start year & end year:
	for each hour of the day:
		finds best (smallest) value <- a). computes position (alt, az) of sun and moon at Equator, alt = 0
									   b). calculates absolute difference between sun & moon <- sqrt(alt_diff ** 2 + az_diff ** 2)
									   c). calculate error value in that date: coeff = 2.8
																			   err = (sun_rad + moon_rad) * coeff
									   d). if difference < err: it is considered an eclipse

-Tune coeff

predicts ~84.5% of eclipses (29 missed/false pos)

--Var 2.-- Using separation between sun and moon at different points in time, at different coordinates

- run on 8 threads for performance

For each date between start year & end year:
		- check if initial condition is valid <- at noon (12:00), at the Equator, separation < 30 (separation= ephem.separation(moon_pos, sun_pos))
		- if not valid: dismiss (not an eclipse candidate)
		- if valid:
				for each hour of they day; (for hh:00, hh:20, hh:40)
					checks if equation is verified at any pair of coordinates <- a). moon_radius + sun_radius - separation > 0 (or -0.003....)
																				 b). return biggest value out of these (& coordinates)
																				 => is an eclipse

					if not verified: not an eclipse
